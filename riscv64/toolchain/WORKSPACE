load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# custom risc-v 64 bit toolchains
http_archive(
    name = "gcc-12-riscv64-toolchains",
    urls = ["file:///opt/bazel/risc64_linux_gnu-12.tar.xz"],
    build_file = "//:gcc-12-riscv64-toolchains.BUILD",
    sha256 = "58bc005f5cbc8b6ef2e52aa29c013d7fe1777708103a77767260a3f3e2bf8542",
)

# partial gcc-12 risc-v 64 bit toolchain without libc or C++
http_archive(
    name = "gcc-14-riscv64-toolchains",
    urls = ["file:///opt/bazel/risc64_linux_gnu-14.tar.xz"],
    build_file = "//:gcc-14-riscv64-toolchains.BUILD",
    sha256 = "4318633698f872f48047954073f6ab48a33c4ff4125d65cf294090b0f1f80089",
)

# system libraries used by toolchain build system
# We built the custom toolchain on a fedora x86_64 platform, so we need some
# fedora x86_64 sharable system libraries to execute.
http_archive(
    name = "fedora38-system-libs",
    urls = ["file:///opt/bazel/fedora38_system_libs.tar.xz"],
    build_file = "//:fedora38-system-libs.BUILD",
    sha256 = "9a1e1c17226687db140c32ceb5ff1865e553b4f8735fd37faecd42a1738ac767",
)

register_toolchains(
    # a separate Bazel project independent of /opt/riscv,
    # currently based on gcc-12-riscv64-toolchains
    "//toolchains:riscv64-default",
    # an experimental and partial toolchain based on gcc-14-riscv64-toolchains
    "//toolchains:riscv64-next",
    # a local x86_64 toolchain based on whatever the host provides
    "//toolchains:x86_64_local_host",
)
